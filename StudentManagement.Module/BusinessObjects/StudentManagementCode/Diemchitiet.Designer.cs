//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using DevExpress.Xpo;
using DevExpress.Xpo.Metadata;
using DevExpress.Data.Filtering;
using System.Collections.Generic;
using System.ComponentModel;
using System.Reflection;
using DevExpress.Persistent.Validation;
using DevExpress.Persistent.Base;
namespace StudentManagement.Module.BusinessObjects.StudentManagement
{
    [DefaultClassOptions]
    public partial class Diemchitiet : DevExpress.Persistent.BaseImpl.BaseObject
    {

        Sinhvien fMaSinhVien;
        [DevExpress.Xpo.DisplayName(@"Mã sinh viên")]
        public Sinhvien MaSinhVien
        {
            get { return fMaSinhVien; }
            set { SetPropertyValue<Sinhvien>(nameof(MaSinhVien), ref fMaSinhVien, value); }
        }
        Monhoc fMonhocID;
        [Association(@"DiemchitietReferencesMonhoc")]
        public Monhoc MonhocID
        {
            get { return fMonhocID; }
            set { SetPropertyValue<Monhoc>(nameof(MonhocID), ref fMonhocID, value); }
        }
        double fDiemChuyenCan;
        [DevExpress.Xpo.DisplayName(@"Điểm chuyên cần")]
        [RuleRequiredField("DiemChuyenCanRequired", DefaultContexts.Save,
            "Điểm chuyên cần không được để trống")]
        public double DiemChuyenCan
        {
            get { return fDiemChuyenCan; }
            set { SetPropertyValue<double>(nameof(DiemChuyenCan), ref fDiemChuyenCan, value); }
        }
        double fDiemBaiTap;
        [DevExpress.Xpo.DisplayName(@"Điểm bài tập")]

        public double DiemBaiTap
        {
            get { return fDiemBaiTap; }
            set { SetPropertyValue<double>(nameof(DiemBaiTap), ref fDiemBaiTap, value); }
        }
        double fDiemGiuaKy;
        [DevExpress.Xpo.DisplayName(@"Điểm giữa kỳ")]
        [RuleRequiredField("DiemGiuaKyRequired", DefaultContexts.Save,
            "Điểm giữa kỳ không được để trống")]
        public double DiemGiuaKy
        {
            get { return fDiemGiuaKy; }
            set { SetPropertyValue<double>(nameof(DiemGiuaKy), ref fDiemGiuaKy, value); }
        }
        double fDiemCuoiKy;
        [DevExpress.Xpo.DisplayName(@"Điểm cuối kỳ")]
        [RuleRequiredField("DiemCuoiKyRequired", DefaultContexts.Save,
            "Điểm cuối kỳ không được để trống")]
        public double DiemCuoiKy
        {
            get { return fDiemCuoiKy; }
            set { SetPropertyValue<double>(nameof(DiemCuoiKy), ref fDiemCuoiKy, value); }
        }
        [DevExpress.Xpo.DisplayName(@"Điểm tổng kết")]
        [PersistentAlias("IIf([SoTinChi] = 3, ToDecimal([DiemChuyenCan]) * 0.1 + ToDecimal([DiemBaiTap]) * 0.2 + ToDecimal([DiemGiuaKy]) * 0.2 + ToDecimal([DiemCuoiKy]) * 0.5, " +
                  "IIf([SoTinChi] = 2, ToDecimal([DiemChuyenCan]) * 0.2 + ToDecimal([DiemGiuaKy]) * 0.2 + ToDecimal([DiemCuoiKy]) * 0.6, 0))")]
        public double DiemTongKet
        {
            get { return (double)(EvaluateAlias(nameof(DiemTongKet))); }
        }

        string fDiemTongKetThang4;
        public string DiemTongKetThang4
        {
            get
            {
                double diem10 = DiemTongKet; // Lấy điểm thang 10

                // Chuyển điểm từ thang 10 sang thang 4 theo điều kiện mới
                if (diem10 >= 8.5)
                    return "A";
                if (diem10 >= 7.0)
                    return "B";
                if (diem10 >= 5.5)
                    return "C";
                if (diem10 >= 4.0)
                    return "D";
                return "F"; // Loại không đạt
            }
        }
        [Association(@"DiemsoReferencesDiemchitiet"), Aggregated]
        public XPCollection<Diemso> Diemsoes { get { return GetCollection<Diemso>(nameof(Diemsoes)); } }
    }

}
