    //------------------------------------------------------------------------------
    // <auto-generated>
    //     This code was generated by a tool.
    //
    //     Changes to this file may cause incorrect behavior and will be lost if
    //     the code is regenerated.
    // </auto-generated>
    //------------------------------------------------------------------------------
    using System;
    using DevExpress.Xpo;
    using DevExpress.Xpo.Metadata;
    using DevExpress.Data.Filtering;
    using System.Collections.Generic;
    using System.ComponentModel;
    using System.Reflection;
    using DevExpress.Persistent.Validation;
using DevExpress.Persistent.Base;
namespace StudentManagement.Module.BusinessObjects.StudentManagement
    {
    [DefaultProperty("MaSinhVien")]
    [DefaultClassOptions]
    public partial class Sinhvien : DevExpress.Persistent.BaseImpl.BaseObject
        {
            string fMaSinhVien;
            [DevExpress.Xpo.DisplayName(@"Mã sinh viên")]
            [DevExpress.Persistent.Validation.RuleUniqueValue]
            [RuleRequiredField("Yêu cầu Mã SV", DefaultContexts.Save, "Phải có Mã sinh viên")]
            public string MaSinhVien
            {
                get { return fMaSinhVien; }
                set { SetPropertyValue<string>(nameof(MaSinhVien), ref fMaSinhVien, value); }
            }
            string fHoTen;
            [DevExpress.Xpo.DisplayName(@"Họ và tên sinh viên")]
            [RuleRequiredField("Yêu cầu Họ và tên SV", DefaultContexts.Save, "Phải có Họ và tên sinh viên")]
            public string HoTen
            {
                get { return fHoTen; }
                set { SetPropertyValue<string>(nameof(HoTen), ref fHoTen, value); }
            }
            string fEmail;
        [RuleRegularExpression("Email không hợp lệ", DefaultContexts.Save, @"^[\w-\.]+@([\w-]+\.)+[\w-]{2,4}$")]
        [RuleRequiredField("EmailRequired", DefaultContexts.Save,
            "Email không được để trống khi có Khoa")]
        [RuleRegularExpression("ValidVKUEmail", DefaultContexts.Save,
            @"^[\w-\.]+@vku\.udn\.vn$",
            "Email phải có định dạng @vku.udn.vn")]
        public string Email
            {
                get { return fEmail; }
                set { SetPropertyValue<string>(nameof(Email), ref fEmail, value); }
            }
            string fSDT;
            [DevExpress.Xpo.DisplayName(@"Số điện thoại")]
        [RuleRegularExpression("Số điện thoại không hợp lệ", DefaultContexts.Save, @"^0\d{9,10}$")]
        public string SDT
            {
                get { return fSDT; }
                set { SetPropertyValue<string>(nameof(SDT), ref fSDT, value); }
            }
            string fDiaChi;
            [DevExpress.Xpo.DisplayName(@"Địa chỉ")]
            public string DiaChi
            {
                get { return fDiaChi; }
                set { SetPropertyValue<string>(nameof(DiaChi), ref fDiaChi, value); }
            }
            DateTime fNgaySinh;
            [DevExpress.Xpo.DisplayName(@"Ngày sinh")]
            [DevExpress.ExpressApp.Model.ModelDefault("EditMask", "dd/MM/yyyy"),
            DevExpress.ExpressApp.Model.ModelDefault("DisplayFormat", "{0:dd/MM/yyyy}")]
            public DateTime NgaySinh
            {
                get { return fNgaySinh; }
                set { SetPropertyValue<DateTime>(nameof(NgaySinh), ref fNgaySinh, value); }
            }
            string fGioiTinh;
            [DevExpress.Xpo.DisplayName(@"Giới tính")]

            public string GioiTinh
            {
                get { return fGioiTinh; }
                set { SetPropertyValue<string>(nameof(GioiTinh), ref fGioiTinh, value); }
            }
            string fKhoa;
        //[RuleCriteria("ValidKhoa", DefaultContexts.Save,
        //    "IsNull(Khoa) || (!IsNull(Email) && Email.EndsWith('@vku.udn.vn'))",
        //    "Không thể set Khoa khi email không có domain @vku.udn.vn")]
        public string Khoa
            {
                get { return fKhoa; }
                set { SetPropertyValue<string>(nameof(Khoa), ref fKhoa, value); }
            }
            DateTime fNgayTao;
            [DevExpress.Xpo.DisplayName(@"Ngày tạo")]
            public DateTime NgayTao
            {
                get { return fNgayTao; }
                set { SetPropertyValue<DateTime>(nameof(NgayTao), ref fNgayTao, value); }
            }
            DateTime fNgayCapNhat;
            [DevExpress.Xpo.DisplayName(@"Ngày cập nhật")]
            [DevExpress.ExpressApp.Model.ModelDefault("EditMask", "dd/MM/yyyy HH:mm"),
            DevExpress.ExpressApp.Model.ModelDefault("DisplayFormat", "{0:dd/MM/yyyy HH:mm}")]
            public DateTime NgayCapNhat
            {
                get { return fNgayCapNhat; }
                set { SetPropertyValue<DateTime>(nameof(NgayCapNhat), ref fNgayCapNhat, value); }
            }

            bool fEnableEmailNotification;
            [DevExpress.Xpo.DisplayName(@"Nhận Thông Báo Email")]
            public bool EnableEmailNotification
            {
                get { return fEnableEmailNotification; }
                set { SetPropertyValue<bool>(nameof(EnableEmailNotification), ref fEnableEmailNotification, value); }
            }
            [Association(@"LichhocReferencesSinhvien"), Aggregated]
            public XPCollection<Lichhoc> Lichhocs { get { return GetCollection<Lichhoc>(nameof(Lichhocs)); } }
            [Association(@"DiemsoReferencesSinhvien"), Aggregated]
            public XPCollection<Diemso> Diemsoes { get { return GetCollection<Diemso>(nameof(Diemsoes)); } }
            [Association(@"HocphiReferencesSinhvien"), Aggregated]
            public XPCollection<Hocphi> Hocphis { get { return GetCollection<Hocphi>(nameof(Hocphis)); } }
            [Association(@"DiemdanhReferencesSinhvien"), Aggregated]
            public XPCollection<Diemdanh> Diemdanhs { get { return GetCollection<Diemdanh>(nameof(Diemdanhs)); } }
            [Association(@"HocphichitietReferencesSinhvien"), Aggregated]
            public XPCollection<Hocphichitiet> Hocphichitiets { get { return GetCollection<Hocphichitiet>(nameof(Hocphichitiets)); } }
        }

    }
